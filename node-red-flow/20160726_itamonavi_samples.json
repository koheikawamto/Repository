[{"id":"f800d93.471f928","type":"template","z":"a639d60.12a9228","name":"地図表示html","field":"payload","fieldType":"msg","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja-jp\">\n<head>\n  <meta charset=\"utf-8\">\n<script src=\"//api.its-mo.com/cgi/loader.cgi?key=***************&ver=2.0&api=zdcmap.js&force=1\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n//<![CDATA[\n    /* 東京 */\n    var map,\n        lat = 35.6778614, lon = 139.7703167;\n\n    function loadMap() {\n        map = new ZDC.Map(\n            document.getElementById('ZMap'),\n            {\n                latlon: new ZDC.LatLon(lat, lon),\n                zoom: 3\n            }\n        );\n    };\n//]]>\n</script>\n</head>\n\n<body onload=\"loadMap();\">\n    <div id=\"ZMap\" style=\"border:1px solid #777777; width:500px; height:300px; top:0px; left:20px; position:absolute;\"></div>\n</body>\n</html>","x":515,"y":48,"wires":[["f770c1b8.3cbc7"]]},{"id":"7a756ed.8b7399","type":"http request","z":"a639d60.12a9228","name":"文化施設GeoJSON","method":"GET","url":"http://s3-ap-northeast-1.amazonaws.com/geo-sample-data/cultural_faculties.geojson","tls":"","x":500,"y":215,"wires":[["843a1ce2.8433e"]]},{"id":"f770c1b8.3cbc7","type":"http response","z":"a639d60.12a9228","name":"","x":734,"y":47,"wires":[]},{"id":"c598803b.1d4a9","type":"http in","z":"a639d60.12a9228","name":"","url":"/sample","method":"get","swaggerDoc":"","x":195,"y":49,"wires":[["f800d93.471f928"]]},{"id":"48a7ecde.c85094","type":"http in","z":"a639d60.12a9228","name":"","url":"/data/facilities","method":"get","swaggerDoc":"","x":197.5,"y":220,"wires":[["7a756ed.8b7399"]]},{"id":"843a1ce2.8433e","type":"json","z":"a639d60.12a9228","name":"","x":754.5,"y":215,"wires":[["9a68b147.0038f"]]},{"id":"9a68b147.0038f","type":"http response","z":"a639d60.12a9228","name":"","x":950.5,"y":215,"wires":[]},{"id":"d6b8f4f6.998838","type":"http in","z":"a639d60.12a9228","name":"","url":"/polygon","method":"get","swaggerDoc":"","x":200.5,"y":116,"wires":[["3e01735.9fe6f8c"]]},{"id":"3e01735.9fe6f8c","type":"template","z":"a639d60.12a9228","name":"都道府県ポリゴン表示html","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <script src=\"//api.its-mo.com/cgi/loader.cgi?key=***************&ver=2.0&api=zdcmap.js,control.js,shape.js,geo.js,imglayer.js,search.js,areamap.js,railwaymap.js,submap.js,usercontrol.js,userwidget.js\" type=\"text/javascript\"></script>\n  <script src=\"//support.e-map.ne.jp/manuals/V20/apisample/geojson/geojson-1.0.js\" type=\"text/javascript\"></script>\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n  <title></title>\n</head>\n<style type=\"text/css\">\n  body {\n    margin: 0;\n  }\n  #ZMap {\n    width: 100%;\n    height: 100%;\n    position:absolute;\n  }\n  #prefs {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n  }\n  .label {\n    background-color: #000000;\n    font-size: 0.8em;\n    color: #ffffff;\n    text-align: center;\n  }\n</style>\n<body onload=\"load();\">\n<div id=\"ZMap\"></div>\n<select id=\"prefs\"></select>\n<script>\n  var map, prefsMap = {}, initPrefCode = '40', widgetList = [], isSearching = false;\n\n  function load() {\n    map = new ZDC.Map(\n        document.getElementById('ZMap'), {\n          zoom: 5\n        }\n    );\n\n    addControl();\n\n    ZDC.Search.getAddrListByAddrCode({}, function(code, res) {\n      var items = res.item, item, strBuf = '';\n      for (var i = 0, l = items.length; i < l; i++) {\n        item = items[i];\n        prefsMap[item.code] = item.latlon;\n        strBuf += ('<option value=\"' + item.code +'\">' + item.text + '</option>');\n      }\n      $('#prefs').append(strBuf);\n      $('#prefs').val(initPrefCode);\n      getPolylinesByPrefCd(initPrefCode);\n    });\n\n    $('#prefs').on('change', function() {\n      var code = $(this).val();\n      getPolylinesByPrefCd(code);\n    })\n\n  }\n\n  function getPolylinesByPrefCd(code) {\n    if (isSearching) {\n      return\n    }\n    isSearching = true;\n    var polyline;\n    for (var i = 0, l = widgetList.length; i < l; i++) {\n      polyline = widgetList[i];\n      map.removeWidget(polyline);\n    }\n    widgetList = [];\n\n    map.moveLatLon(prefsMap[code]);\n    ZDC.Search.getAddrListByAddrCode({\n      addrcode: code\n    }, showResult)\n  }\n\n\n  function showResult(code, res) {\n    var items = res.item, item, addrcdBuf = '';\n    for (var i = 0, l = items.length; i < l; i++) {\n      item = items[i];\n      showAddrLabel(item.text, item.latlon);\n      addrcdBuf += item.code;\n      if (i < l - 1) {\n        addrcdBuf += ',';\n      }\n    }\n\n    ZDC.Search.getAddrPolygon({\n      addrcd: addrcdBuf\n    }, visualize)\n  }\n\n  function showAddrLabel(name, latlon) {\n    var widgetlabel =\n    {\n      html: '<div class=\"label\">' + name + '</div>'\n    };\n    var widget = new ZDC.UserWidget(latlon, widgetlabel);\n    map.addWidget(widget);\n    widgetList.push(widget);\n    widget.open();\n  }\n\n  function visualize(code, res) {\n    var items = res.item, item, geom;\n    for (var i = 0, l = items.length; i < l; i++) {\n      item = items[i];\n      geom = item.geom;\n      showGeoJSON(geom);\n    }\n\n  }\n\n  function showGeoJSON(geom) {\n    new ZDC.GeoJSON(map, geom, {\n      polylineOptions: {\n        fillColor: generateRandomColor(),\n        fillOpacity: 0.4\n      },\n      func: function(res) {\n        var mwidgets;\n        for (var i = 0, l = res.length; i < l; i++) {\n          mwidgets = res[i].mwidgets;\n          widgetList = widgetList.concat(mwidgets);\n        }\n        isSearching = false;\n      }\n    });\n  }\n\n  function generateRandomColor() {\n    var res = '#', tmp;\n    for (var i = 0; i < 3; i++) {\n      tmp = (Math.floor(Math.random() * 255)).toString(16);\n      if (tmp.length === 1) {\n        tmp = '0' + tmp;\n      }\n      res += tmp;\n    }\n    return res;\n  }\n\n  function addControl() {\n    var widget_normal = new ZDC.Control(\n        {\n          pos: {\n            top: 10,\n            left: 10\n          },\n          type: ZDC.CTRL_TYPE_NORMAL\n        }\n    );\n    map.addWidget(widget_normal);\n  }\n\n</script>\n</body>\n</html>\n","x":510.5,"y":115,"wires":[["613beca.d335c14"]]},{"id":"613beca.d335c14","type":"http response","z":"a639d60.12a9228","name":"","x":767.5,"y":114,"wires":[]},{"id":"81f79900.2081b8","type":"http in","z":"a639d60.12a9228","name":"","url":"/facilities","method":"get","swaggerDoc":"","x":188.5,"y":276,"wires":[["542895bb.c8c0ac"]]},{"id":"542895bb.c8c0ac","type":"template","z":"a639d60.12a9228","name":"文化施設表示html","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <script src=\"//api.its-mo.com/cgi/loader.cgi?key=***************&ver=2.0&api=zdcmap.js,control.js,shape.js,geo.js,imglayer.js,search.js,areamap.js,railwaymap.js,submap.js,usercontrol.js,userwidget.js\" type=\"text/javascript\"></script>\n  <script src=\"//support.e-map.ne.jp/manuals/V20/apisample/geojson/geojson-1.0.js\" type=\"text/javascript\"></script>\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n  <title></title>\n</head>\n<style type=\"text/css\">\n  #ZMap {\n    width: 100%;\n    height: 100%;\n    position:absolute;\n  }\n</style>\n<body>\n<div id=\"ZMap\"></div>\n<script>\n  var map, msg;\n\n  window.onload = function() {\n    map = new ZDC.Map(\n        document.getElementById('ZMap'), {\n          latlon: new ZDC.LatLon(33.886675, 130.88129),\n          zoom: 7\n        }\n    );\n\n    /* 通常のコントロールを作成 */\n    var widget_normal = new ZDC.Control(\n        {\n          pos: {\n            top: 10,\n            left: 10\n          },\n          type: ZDC.CTRL_TYPE_NORMAL\n        }\n    );\n    map.addWidget(widget_normal);\n\n    msg = new ZDC.MsgInfo(\n        map.getLatLon(),\n        {offset: ZDC.Pixel(0, -18)}\n    );\n    map.addWidget(msg);\n\n    showGeoJSON();\n  };\n\n  function showGeoJSON() {\n    $.get('/data/facilities',\n        function (data) {\n          if (typeof data !== 'object') {\n            data = JSON.parse(data);\n          }\n          new ZDC.GeoJSON(map, data, {\n            datum: 'WGS84',\n            func: callback\n          });\n        }\n    );\n  }\n\n  function callback(result) {\n    var obj, properties, widget;\n    for (var i = 0, l = result.length; i < l; i++) {\n      obj = result[i];\n      properties = obj.feature.properties;\n      widget = obj.mwidgets[0];\n      ZDC.bind(\n          widget,\n          ZDC.MARKER_MOUSEUP,\n          {\n            name: properties.P27_005,\n            address: properties.P27_006,\n            latlon: widget.getLatLon()\n          },\n          showInfo\n      );\n    }\n  }\n\n  function showInfo() {\n    msg.moveLatLon(this.latlon);\n    msg.setHtml(\n        '<div style=\"font-size:80%; line-height: 1.3;\"><b>' + this.name + '</b><br>' +\n        this.address + '</div>'\n    );\n    msg.open();\n  }\n\n</script>\n</body>\n</html>","x":492.5,"y":271,"wires":[["3666e71c.1f0d48"]]},{"id":"3666e71c.1f0d48","type":"http response","z":"a639d60.12a9228","name":"","x":781.5,"y":270,"wires":[]},{"id":"f389ff6f.a7b7a","type":"http in","z":"a639d60.12a9228","name":"","url":"/route","method":"get","swaggerDoc":"","x":198.5,"y":168,"wires":[["cc88a296.7304"]]},{"id":"cc88a296.7304","type":"template","z":"a639d60.12a9228","name":"自動車ルート検索html","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <script src=\"//api.its-mo.com/cgi/loader.cgi?key=***************&ver=2.0&api=zdcmap.js,control.js,shape.js,geo.js,imglayer.js,search.js,areamap.js,railwaymap.js,submap.js,usercontrol.js,userwidget.js\" type=\"text/javascript\"></script>\n  <script src=\"//support.e-map.ne.jp/manuals/V20/apisample/geojson/geojson-1.0.js\" type=\"text/javascript\"></script>\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n  <title></title>\n</head>\n<style type=\"text/css\">\n  #ZMap {\n    width: 100%;\n    height: 100%;\n    position:absolute;\n  }\n  #options {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n  }\n</style>\n<body onload=\"loadMap()\">\n<div id=\"ZMap\"></div>\n<select id=\"options\">\n  <option value=\"true\" selected=\"selected\">有料道路含む</option>\n  <option value=\"false\">一般道のみ</option>\n</select>\n<script type=\"text/javascript\">\n  var map, mrkStart, mrkEnd, dragging, draggingMrk, difLat, difLon,\n      oldStartLat, oldStartLon, oldEndLat, oldEndLon,\n      plWidgets = [];\n\n  var line_property = {\n    '高速道路': {\n      strokeColor: '#3000ff', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '都市高速道路': {\n      strokeColor: '#008E00', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '国道': {\n      strokeColor: '#007777', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '主要地方道': {\n      strokeColor: '#880000', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '都道府県道': {\n      strokeColor: '#008800', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '一般道路(幹線)': {\n      strokeColor: '#000088', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '一般道路(その他)': {\n      strokeColor: '#880000', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '導入路': {\n      strokeColor: '#880000', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    '細街路(主要)': {\n      strokeColor: '#880000', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    },\n    'フェリー航路': {\n    },\n    '道路外': {\n      strokeColor: '#880000', strokeWeight: 5,\n      lineOpacity: 0.5, lineStyle: 'solid'\n    }\n  };\n\n  function loadMap() {\n    var startLat = 33.883732444, startLon = 130.885198222,\n        endLat =  33.586319, endLon = 130.421886;\n\n    map = new ZDC.Map(\n        document.getElementById('ZMap')\n    );\n\n    /* 地図上の緯度経度を取得(getPointerPosition)できるようにする */\n    map.pointerPositionOn();\n\n    /* マーカを追加 */\n    mrkStart = new ZDC.Marker(\n        new ZDC.LatLon(startLat, startLon),\n        {\n          color: ZDC.MARKER_COLOR_ID_BLUE_L\n        }\n    );\n    mrkEnd = new ZDC.Marker(\n        new ZDC.LatLon(endLat, endLon),\n        {\n          color: ZDC.MARKER_COLOR_ID_RED_L\n        }\n    );\n    map.addWidget(mrkStart);\n    map.addWidget(mrkEnd);\n\n    /* 吹き出しを追加 */\n    var msg_info = new ZDC.MsgInfo(startLat, {offset: ZDC.Pixel(12, -30)});\n    map.addWidget(msg_info);\n\n    /* マーカクリック時のイベントを登録 */\n    ZDC.bind(\n        mrkStart,\n        ZDC.MARKER_CLICK,\n        {name: 'スタート', marker: mrkStart, info: msg_info},\n        showInfo\n    );\n    ZDC.bind(\n        mrkEnd,\n        ZDC.MARKER_CLICK,\n        {name: 'ゴール', marker: mrkEnd, info: msg_info},\n        showInfo\n    );\n\n    /* マーカをドラッグ可能にする */\n    ZDC.addListener(map, ZDC.MAP_MOUSEMOVE, onMouseMove);\n    ZDC.addListener(map, ZDC.MAP_MOUSEUP, onMouseUp);\n\n    ZDC.addDomListener(document, 'mouseup', onMouseUp);\n\n    ZDC.addListener(mrkStart, ZDC.MARKER_MOUSEMOVE, onMouseMove);\n    ZDC.addListener(mrkStart, ZDC.MARKER_MOUSEDOWN, onMouseDown);\n    ZDC.addListener(mrkStart, ZDC.MARKER_MOUSEUP, onMouseUp);\n\n    ZDC.addListener(mrkEnd, ZDC.MARKER_MOUSEMOVE, onMouseMove);\n    ZDC.addListener(mrkEnd, ZDC.MARKER_MOUSEDOWN, onMouseDown);\n    ZDC.addListener(mrkEnd, ZDC.MARKER_MOUSEUP, onMouseUp);\n\n    var options = document.getElementById('options');\n    options.addEventListener('change', function () {\n      searchRoute();\n    });\n\n    /* 自動車ルート探索を実行 */\n    searchRoute();\n\n    addControl();\n  }\n\n  /* 吹き出しを表示 */\n  function showInfo() {\n    this.info.moveLatLon(this.marker.getLatLon());\n\n    this.info.setHtml(\n        '<div style=\"font-size:80%; line-height: 1.3;\"><b>' +\n        this.name + '</b><br>' +\n        '緯度：' + this.marker.getLatLon().lat + '<br>' +\n        '経度：' + this.marker.getLatLon().lon + '</div>'\n    );\n\n    this.info.open();\n  }\n\n  /* 自動車ルート探索を実行 */\n  function searchRoute() {\n\n    var toll = document.getElementById('options').value === 'true';\n\n    ZDC.Search.getRouteByDrive({\n      from: mrkStart.getLatLon(),\n      to: mrkEnd.getLatLon(),\n      toll: toll\n    },function(status, res) {\n      if (status.code == '000') {\n        /* 取得成功 */\n        writeRoute(res);\n\n        oldStartLat = mrkStart.getLatLon().lat;\n        oldStartLon = mrkStart.getLatLon().lon;\n        oldEndLat = mrkEnd.getLatLon().lat;\n        oldEndLon = mrkEnd.getLatLon().lon;\n      } else {\n        /* 取得失敗 */\n        alert(status.text);\n      }\n    });\n  }\n\n  /* 自動車ルートを描画 */\n  function writeRoute(res) {\n    var link = res.route.link, latlons = [];\n\n    /* 前回描画した領域を消去 */\n    refreshPolygon();\n\n    for (var i = 0, j = link.length; i < j; i++) {\n      var opt = line_property[link[i].roadType];\n      var pllatlons = [];\n\n      for (var k = 0; k < link[i].line.length; k++) {\n        pllatlons.push(link[i].line[k]);\n\n        if (k == 0) {\n          latlons[i] = link[i].line[k];\n        }\n        if (i == j - 1 && k == (link[i].line.length - 1)) {\n          latlons[i + 1] = link[i].line[k];\n        }\n      }\n\n      var pl = new ZDC.Polyline(pllatlons, opt);\n      map.addWidget(pl);\n      plWidgets.push(pl);\n    }\n\n    /* 地点が全て表示できる縮尺レベルを取得 */\n    var adjust = map.getAdjustZoom(latlons);\n    map.moveLatLon(adjust.latlon);\n    map.setZoom(adjust.zoom);\n\n    /* 地図を表示 */\n    var divZmap = document.getElementById('ZMap');\n    if (divZmap.style.display == 'none') {\n      divZmap.style.display = 'block';\n    }\n  }\n\n  /* 描画した領域をすべて削除 */\n  function refreshPolygon() {\n    while (plWidgets.length > 0) {\n      map.removeWidget(plWidgets.shift());\n    }\n  }\n\n  /* マウスダウンイベント処理 */\n  function onMouseDown() {\n    /* 移動対象のMarkerを保持 */\n    draggingMrk = this;\n\n    /* マウスダウン位置の緯度経度とマーカの緯度経度の差分を保持 */\n    var cLatLon = map.getPointerPosition();\n    difLat = cLatLon.lat - draggingMrk.getLatLon().lat;\n    difLon = cLatLon.lon - draggingMrk.getLatLon().lon;\n\n    dragging = true;\n  }\n\n  /* マウスムーブイベント処理 */\n  function onMouseMove() {\n    /* ドラッグ中のみ処理させる */\n    if (dragging) {\n      var latlon = map.getPointerPosition();\n\n      /* マーカ表示緯度経度を取得 */\n      var mkLat = latlon.lat - difLat;\n      var mkLon = latlon.lon - difLon;\n      draggingMrk.moveLatLon(new ZDC.LatLon(mkLat, mkLon));\n    }\n  }\n\n  /* マウスアップイベント処理 */\n  function onMouseUp() {\n    if (dragging) {\n      dragging = false;\n      searchRoute();\n    }\n  }\n\n  function addControl() {\n    var widget_normal = new ZDC.Control(\n        {\n          pos: {\n            top: 10,\n            left: 10\n          },\n          type: ZDC.CTRL_TYPE_NORMAL\n        }\n    );\n    map.addWidget(widget_normal);\n  }\n</script>\n</body>\n</html>","x":497.5,"y":168,"wires":[["e2cc2e2b.bffec"]]},{"id":"e2cc2e2b.bffec","type":"http response","z":"a639d60.12a9228","name":"","x":758.5,"y":167,"wires":[]}]